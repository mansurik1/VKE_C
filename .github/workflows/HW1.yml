name: HW1

on:
  push:
    branches: [ hw-1 ]
#    branches: [ main ]

env:
  BUILD_DIRECTORY: build
  TESTS_DIRECTORY: tests

jobs:

  Format:
    runs-on: ubuntu-latest
    container: mans02/c-hw-image

    steps:
      - uses: actions/checkout@v3

      - name: Format
        run: make format

  Static:
    runs-on: ubuntu-latest
    container: mans02/c-hw-image

    steps:
      - uses: actions/checkout@v3

      - name: Lint
        run: make lint

  Build:
    runs-on: ubuntu-latest
    container: mans02/c-hw-image

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        run: make configure

      - name: Build
        working-directory: ${{ github.workspace }}/build
        run: make build -f ../Makefile

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build_dir
          path: ${{ github.workspace }}/build

  Sanitize:
    runs-on: ubuntu-latest
    container: mans02/c-hw-image
    needs: [Build]

    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build_dir
          path: ${{ github.workspace }}/build

      - name: Address sanitizer
        run: make address

      - name: Thread sanitizer
        run: make thread

  Testing:
    runs-on: ubuntu-latest
    container: mans02/c-hw-image
    needs: [Build]

    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build_dir
          path: ${{ github.workspace }}/build

      - name: Launch tests
        working-directory: ${{ github.workspace }}/build
        run: make test -f ../Makefile

      - name: Check code coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/build/coverage.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

  Dynamic:
    runs-on: ubuntu-latest
    container: mans02/c-hw-image
    needs: [Build]

    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build_dir
          path: ${{ github.workspace }}/build

      - name: Memory check
        run: make valgrind
